<?xml version="1.0" encoding="UTF-8"?>
<!--
/*
 * $Id$
 *
 * Cape Henry Technologies Inc. licenses this file to You under
 * the Apache License, Version 2.0 (the "License"); you may not use this
 * file except in compliance with the License.  You may obtain a copy of
 * the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
-->

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd"
       default-lazy-init="true">

    <!-- Hibernate SessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:hibernate.cfg.xml"/>
        <property name="hibernateProperties">
            <value>
                hibernate.dialect=${hibernate.dialect}
                hibernate.query.substitutions=true 'Y', false 'N'
                hibernate.cache.use_second_level_cache=true
                hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider
            </value>
            <!-- Turn batching off for better error messages under PostgreSQL -->
            <!-- hibernate.jdbc.batch_size=0 -->
        </property>
    </bean>

    <!-- HibernateExtensionPostProcessor -->
    <bean class="com.cpht.dao.spring.HibernateExtensionPostProcessor">
        <property name="annotatedClasses">
            <list>
                <value>com.cpht.model.Customer</value>
                <value>com.cpht.model.Element</value>
                <value>com.cpht.model.Item</value>
                <value>com.cpht.model.Event</value>
                <value>com.cpht.model.AccountType</value>
                <value>com.cpht.model.AmountType</value>
            </list>
        </property>
    </bean>

    <!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="customerDao" class="com.cpht.dao.hibernate.GenericDaoHibernate">
        <constructor-arg value="com.cpht.model.Customer"/>
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="elementDao" class="com.cpht.dao.hibernate.GenericDaoHibernate">
        <constructor-arg value="com.cpht.model.Element"/>
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="itemDao" class="com.cpht.dao.hibernate.GenericDaoHibernate">
        <constructor-arg value="com.cpht.model.Item"/>
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="eventDao" class="com.cpht.dao.hibernate.GenericDaoHibernate">
        <constructor-arg value="com.cpht.model.Event"/>
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="accountTypeDao" class="com.cpht.dao.hibernate.GenericDaoHibernate">
        <constructor-arg value="com.cpht.model.AccountType"/>
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="amountTypeDao" class="com.cpht.dao.hibernate.GenericDaoHibernate">
        <constructor-arg value="com.cpht.model.AmountType"/>
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

</beans>
